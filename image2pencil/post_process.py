# post process the clean-line sketch generated by "master-sketching" network
import cv2 as cv
import matplotlib.pylab as plt
import os
import numpy as np


root_path = 'E:\Postgraduate\sketch_simplification-master\data\output/'
img_list = os.listdir(root_path)
for i in range(len(img_list)):
    sketch_name = root_path + img_list[i]
    img_name = root_path.replace('output', 'image') + img_list[i]
    sketch = cv.imread(sketch_name, 0)
    img = cv.imread(img_name, 1)
    img = cv.resize(img, (240, 240))

    # Superimpose two pics
    sketch_RGB = cv.cvtColor(sketch, cv.COLOR_GRAY2RGB)
    superpose_img = sketch_RGB * 0.7 + img * 0.3
    superpose_img = np.array(superpose_img, np.uint8)

    cv.imshow('fd', superpose_img)
    cv.waitKey(0)
    # plt.imshow(superpose_img/255)
    # plt.show()

    _, sketch = cv.threshold(sketch, 170, 255, cv.THRESH_BINARY)

    # closing process image
    kernel = np.ones((3, 3), np.uint8)
    skt_dilate = cv.dilate(sketch, kernel, iterations=2)
    skt_erode = cv.erode(skt_dilate, kernel, iterations=1)

    # eliminate big black zones
    _, skt_erode = cv.threshold(skt_erode, 125, 255, cv.THRESH_BINARY_INV)
    res_img = skt_erode + sketch

    # plt.figure(figsize=[18, 7])
    # plt.subplot(131)
    # plt.imshow(sketch/255, 'gray')
    # plt.subplot(132)
    # plt.imshow(skt_erode/255, 'gray')
    # plt.subplot(133)
    # plt.imshow(res_img/255, 'gray')
    # plt.show()
    #
    # cv.imshow('fd', img)
    # cv.waitKey(0)
